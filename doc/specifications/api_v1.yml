openapi: 3.0.3
info:
  title: rust-study-server
  description: Rust study web application
  contact:
    name: rust4fun
  license:
    name: 'MIT License'
  version: 0.1.0

paths:
  /me:
    get:
      operationId: me
      responses:
        '200':
          description: get me
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - root

  /planets/{planet_id}/messages:
    get:
      operationId: get-messages
      parameters:
        - $ref: '#/components/parameters/PlanetId'
        - $ref: '#/components/parameters/PagenationLimitQuery'
        - $ref: '#/components/parameters/PagenationOffsetQuery'
      responses:
        '200':
          $ref: "#/components/responses/OkGetListPlanetMessage"
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - planets

    post:
      operationId: post-message
      parameters:
        - $ref: '#/components/parameters/PlanetId'
      requestBody:
        $ref: '#/components/requestBodies/PostPlanetMessageBody'
      responses:
        '200':
          $ref: "#/components/responses/OkPostPlanetMessage"
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - planets

components:
  #-------------------------------
  # Reusable schemas (data models)
  #-------------------------------
  schemas:
    PagenationLimit:
      type: integer
      minimum: 1
      maximum: 50
      default: 50

    PagenationOffset:
      type: integer

    UserId:
      type: string
      format: uuid

    PlanetId:
      type: string
      format: uuid

    PlanetMessageId:
      type: string
      format: uuid

    SphereId:
      type: string
      format: uuid

    Article:
      type: object
      required:
      - id
      - url
      - image_url
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        image_url:
          type: string
        title:
          type: string
          nullable: true
        url:
          type: string

    User:
      type: object
      properties:
        name:
          type: string
          nullable: true

    PlanetMessage:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PlanetMessageId'
        planet_id:
          $ref: '#/components/schemas/PlanetId'
        content:
          type: string
        user_id:
          $ref: '#/components/schemas/UserId'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - planet_id
        - content
        - user_id
        - created_at
        - updated_at
    
    ListPlanetMessages:
      type: array
      items:
        $ref: '#/components/schemas/PlanetMessage'

    PostPlanetMessage:
      type: object
      properties:
        content:
          type: string 

    PostPlanet:
      type: object
      properties:
        sphere_id:
          $ref: '#/components/schemas/SphereId'
        name:
          type: string 
        description:
          type: string
      required:
        - sphere_id
        - name

  #-------------------------------
  # Reusable operation parameters
  #-------------------------------
  parameters:
    PagenationLimitQuery:
      name: limit
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/PagenationLimit'

    PagenationOffsetQuery:
      name: offset
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/PagenationOffset'

    UserId:
      name: user_id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UserId'

    PlanetId:
      name: planet_id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PlanetId'

  #-------------------------------
  # Reusable request bodies
  #-------------------------------
  requestBodies:
    PostPlanetMessageBody:
      description: post planet message
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostPlanetMessage'

    PostPlanetBody:
      description: post planet message
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostPlanet'

  #-------------------------------
  # Reusable request bodies
  #-------------------------------
  responses:
    OkPostPlanetMessage:
      description: ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlanetMessage'

    OkGetListPlanetMessage:
      description: ok
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                $ref: '#/components/schemas/ListPlanetMessages'
              offset:
                $ref: '#/components/schemas/PagenationOffset'
              limit:
                $ref: '#/components/schemas/PagenationLimit'
              total:
                type: integer

    NotFound:
      description: not found

    Unauthorized:
      description: unauthorized


  securitySchemes:
    token:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
- token: []
tags:
- name: api
